diff --git a/plugin/black.vim b/plugin/black.vim
index 0a26aa0..ab13eeb 100644
--- a/plugin/black.vim
+++ b/plugin/black.vim
@@ -51,9 +51,17 @@ def _get_pip(venv_path):
   return venv_path / 'bin' / 'pip'
 
 def _get_virtualenv_site_packages(venv_path, pyver):
+  import os
   if sys.platform[:3] == "win":
     return venv_path / 'Lib' / 'site-packages'
-  return venv_path / 'lib' / f'python{pyver[0]}.{pyver[1]}' / 'site-packages'
+  path = venv_path / 'lib' / f'python{pyver[0]}.{pyver[1]}' / 'site-packages'
+  if not os.path.exists(path):
+    import glob
+    for ver in glob.glob(str(venv_path / 'lib' / f'python{pyver[0]}.*')):
+      path = venv_path / 'lib' / ver / 'site-packages'
+      if os.path.exists(path):
+        return path
+  return path
 
 def _initialize_black_env(upgrade=False):
   pyver = sys.version_info[:2]
@@ -92,10 +100,15 @@ def _initialize_black_env(upgrade=False):
   return True
 
 if _initialize_black_env():
-  import black
+  try:
+    import black
+  except ModuleNotFoundError as err:
+    black = False
   import time
 
 def Black():
+  if not black:
+    return
   start = time.time()
   fast = bool(int(vim.eval("g:black_fast")))
   line_length = int(vim.eval("g:black_linelength"))
@@ -116,9 +129,13 @@ def Black():
     print(f'Reformatted in {time.time() - start:.4f}s.')
 
 def BlackUpgrade():
+  if not black:
+    return
   _initialize_black_env(upgrade=True)
 
 def BlackVersion():
+  if not black:
+    return
   print(f'Black, version {black.__version__} on Python {sys.version}.')
 
 endpython3
diff --git a/plugin/black.vim b/plugin/black.vim
index 36825cf..9c0fcdf 100644
--- a/plugin/black.vim
+++ b/plugin/black.vim
@@ -51,9 +51,17 @@ def _get_pip(venv_path):
   return venv_path / 'bin' / 'pip'
 
 def _get_virtualenv_site_packages(venv_path, pyver):
+  import os
   if sys.platform[:3] == "win":
     return venv_path / 'Lib' / 'site-packages'
-  return venv_path / 'lib' / f'python{pyver[0]}.{pyver[1]}' / 'site-packages'
+  path = venv_path / 'lib' / f'python{pyver[0]}.{pyver[1]}' / 'site-packages'
+  if not os.path.exists(path):
+    import glob
+    for ver in glob.glob(str(venev_path / 'lib' / f'python{pyver[0]}.*')):
+      path = venv_path / 'lib' / ver / 'site-packages'
+      if os.path.exists(path):
+        return path
+  return path
 
 def _initialize_black_env(upgrade=False):
   pyver = sys.version_info[:2]
@@ -92,10 +100,15 @@ def _initialize_black_env(upgrade=False):
   return True
 
 if _initialize_black_env():
-  import black
+  try:
+    import black
+  except ModuleNotFoundError as err:
+    black = False
   import time
 
 def Black():
+  if not black:
+    return
   start = time.time()
   fast = bool(int(vim.eval("g:black_fast")))
   mode = black.FileMode(
@@ -120,9 +133,13 @@ def Black():
     print(f'Reformatted in {time.time() - start:.4f}s.')
 
 def BlackUpgrade():
+  if not black:
+    return
   _initialize_black_env(upgrade=True)
 
 def BlackVersion():
+  if not black:
+    return
   print(f'Black, version {black.__version__} on Python {sys.version}.')
 
 endpython3
